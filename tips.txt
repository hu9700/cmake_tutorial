cmake make makefiles

use cmake
tell where source is, where build folder is


Create CMakeLists.txt in the root of the source
    cmake_minimum_required(VERSION 3.22.1)
    project(test2)
    add_executable(${PROJECT_NAME} main.cpp)

Base Use:
    Syntax
        cmake [options] -S <path-to-source> -B <path-to-build>
    Do
        mkdir -p out/build/

        in the root of project
            cmake -S ./ -B ./out/build/

        Result:
            It will generate
                Makefile
                CMakeFiles/

    Build
        cd out/build/
        make

install(TARGETS trim DESTINATION bin)
    it will install trim into usr/local/bin/        

print all the make options
make help

install the executable
sudo make install

Add lib
add_library(mymath adder.cpp)
set_target_properties(mymath PROPERTIES PUBLIC_HEADER adder.h)
install(TARGETS mymath LIBRARY DESTINATION lib
        PUBLIC_HEADER DESTINATION include)

    Installing: /usr/local/lib/libmymath.a
    Installing: /usr/local/include/adder.h        

#No need for link directory if the lib is installed
#Use PRIVATE to not expose the library to other program
#target_link_directories(testsome PRIVATE ${CMAKE_SOURCE_DIR}/../lib/build/)


Link Lib build local
    the link directory will look through the build folder
        target_link_directories(${PROJECT_NAME} PRIVATE glfw/src)
    add the lib

Link Lib is already in system
    target_link_libraries(testsome mymath)

add sub module
git submodule add https://github.com/glfw/glfw.git

checkout sub module when just have main repo cloned
    git submodule update --init --recursive

We can change CMakeLists.txt option
change them in run time or config time for more option
In CMakeLists.txt
    option(GLFW_BUILD_DOCS "Build the GLFW documentation" ON)
Do cmake to change option
    cmake -DGLFW_BUILD_DOCS=OFF -S ./ -B ./build/

Config failed
input test6_Config.h.in 
output test6_Config.h
configure_file(test6_Config.h.in test6_Config.h)    